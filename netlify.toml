[Settings]
# Added automatically by the Netlify CLI. It has no effect during normal 
# Git-backed deploys.
ID = "dpolls"

# Settings in the [build] context are global and are applied to all contexts 
# unless otherwise overridden by more specific contexts.  
[build]
  # Directory to change to before starting a build. 
  # This is where we will look for package.json/.nvmrc/etc.
  base = "frontend"

  # Directory (relative to root of your repo) that contains the deploy-ready 
  # HTML files and assets generated by the build. If a base directory has
  # been specified, include it in the publish directory path.
  publish = "frontend/build"

  # Default build command.
  command = "npm run build"

  # Environment variables
  environment = { REACT_APP_NETWORK_ID = "3", REACT_APP_VOTING_CORE_ADDRESS = "0x55D7f084e97eD41811Ad03256348626053162AC8", REACT_APP_WEB3_PROVIDER = "https://ropsten.infura.io/v3/3ac646754c93467bb73cc7bfcb337d81" }

# Production context: all deploys from the Production branch set in your site's 
# deploy contexts will inherit these settings.
[context.production]

[context.production.environment]
  REACT_APP_VOTING_CORE_ADDRESS = "0xb2e05B3531d0338a25202c2E5b565CB24f32e91e"
  REACT_APP_GOOGLE_ANALYTICS_TRACKING_CODE = "UA-140414954-1"

# Deploy Preview context: all deploys resulting from a pull/merge request will 
# inherit these settings.
[context.deploy-preview]

# Here is another way to define context specific environment variables.
[context.deploy-preview.environment]
  REACT_APP_HOST_ENV = "branch-deploy"

# Branch Deploy context: all deploys that are not from a pull/merge request or 
# from the Production branch will inherit these settings.
[context.branch-deploy]

[context.branch-deploy.environment]
  REACT_APP_HOST_ENV = "branch-deploy"

# Specific branch context: all deploys from this specific branch will inherit
# these settings.
[context.dev] # 'dev' is a branch name

[context.dev.environment]

# For contexts of branches with special characters, enclose the branch name 
# with quotes.
[context."feat/branch"]

# Redirects and headers are GLOBAL for all builds â€“ they do not get scoped to 
# contexts no matter where you define them in the file.
# For context-specific rules, use _headers or _redirects files, which are 
# PER-DEPLOY.

# Set of routing rules
[[redirects]]
  from = "/polls/*"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/create"
  to = "/index.html"
  status = 200

[[redirects]]
  from = "/upgrade"
  to = "/index.html"
  status = 200
